"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.schemaExtractor = schemaExtractor;

var _child_process = require("child_process");

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Takes in a Sanity Schema file path and returns a validated and normalized
 * schema.
 *
 * Spins up a forked process where a new babel config is loaded to mimic a
 * Sanity Studio browser environment.
 */
async function schemaExtractor(params) {
  const childProcess = (0, _child_process.fork)(_path.default.resolve(__dirname, './schema-executor'));
  const root = params.cwd || process.cwd();
  const normalizedOptions = {
    schemaPath: _path.default.resolve(root, params.schemaPath),
    babelrcPath: params.babelrcPath ? _path.default.resolve(root, params.babelrcPath) : undefined,
    // TODO: consider throwing if babel options is not JSON serializable
    babelOptions: params.babelOptions,
    cwd: root
  };
  childProcess.send(JSON.stringify(normalizedOptions));
  const message = await new Promise(resolve => {
    childProcess.on('message', resolve);
  });
  childProcess.kill();
  const executorResult = JSON.parse(message);

  if (executorResult.status === 'error') {
    // TODO: ensure this serializes correctly and errors bubble up correctly
    throw new Error(executorResult.error);
  }

  return executorResult.result;
}